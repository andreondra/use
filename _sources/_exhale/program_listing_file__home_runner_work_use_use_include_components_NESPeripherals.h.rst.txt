
.. _program_listing_file__home_runner_work_use_use_include_components_NESPeripherals.h:

Program Listing for File NESPeripherals.h
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_use_use_include_components_NESPeripherals.h>` (``/home/runner/work/use/use/include/components/NESPeripherals.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef USE_NESPERIPHERALS_H
   #define USE_NESPERIPHERALS_H
   
   #include "Component.h"
   
   class NESPeripherals : public Component {
   private:
       class Controller{
       public:
           unsigned int pressedButtons = 0;
           unsigned int dataShifter = 0;
           bool mic = false;
           bool strobeLatch = false;
           void putBit(uint8_t pos, bool value){
               pressedButtons &= ~(0x1 << pos);
               pressedButtons |= value << pos;
           }
   
           enum class inputButtons{
               A       = 0,
               B,
               SELECT,
               START,
               UP,
               DOWN,
               LEFT,
               RIGHT,
               MIC
           };
   
           Controller() = default;
           ~Controller() = default;
   
           uint8_t DATA();
           void OUT(bool value);
           void setState(inputButtons button, bool value);
       } m_controller1, m_controller2;
   
   public:
       NESPeripherals();
       ~NESPeripherals() override = default;
   
       void init() override;
       std::vector<EmulatorWindow> getGUIs() override;
       std::vector<ImInputBinder::action_t> getInputs() override;
   };
   
   #endif //USE_NESPERIPHERALS_H
