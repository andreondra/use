
.. _program_listing_file__home_runner_work_use_use_include_components_Gamepak_Mapper000.h:

Program Listing for File Mapper000.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_use_use_include_components_Gamepak_Mapper000.h>` (``/home/runner/work/use/use/include/components/Gamepak/Mapper000.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #ifndef USE_MAPPER000_H
   #define USE_MAPPER000_H
   
   #include <vector>
   #include <array>
   #include <cstdint>
   #include "Types.h"
   #include "Mapper.h"
   
   class Mapper000 : public Mapper {
   protected:
       std::vector<uint8_t> & m_PRGROM;
       std::vector<uint8_t> & m_CHRROM;
   
       std::array<uint8_t, 0x2000> m_PRGRAM{0x00};
       std::vector<uint8_t> m_CHRRAM;
       bool m_CHRWritable = false;
   
   public:
       Mapper000(std::vector<uint8_t> & PRGROM, std::vector<uint8_t> & CHRROM, mirroringType_t mirroringType);
       ~Mapper000() override = default;
   
       void init() override;
       bool cpuRead(uint16_t addr, uint8_t & data) override;
       bool cpuWrite(uint16_t addr, uint8_t data)  override;
       bool ppuRead(uint16_t addr, uint8_t & data) override;
       bool ppuWrite(uint16_t addr, uint8_t data)  override;
   
       void drawGUI() override;
   
   };
   
   #endif //USE_MAPPER000_H
